#Author: Sathish K Ganga

Inner classes:
> Some times we can declare a class inside another class. Such type of classes are called inner classes. 
> Inner classes concept is introdued in Java 1.1 version. to fix GUI bugs as part of event handling.
> But because of powerful features of inner classe slowly programmers started using in in regular coding also.
> Without existing one type of object if there is no chance of existing another type of object then we should go for inner classes.

Example#1: University consists of several departments. Without existing university there is no chance of existing department.
Hence we have to declare department class inside university class.
class University {
  class Department { ... }
}

Example#2: Map is a group of key value pairs and each key value pair is called an entry. 
Without existing map object there is no chance of existing entry object. Hence interface entry is defined inside map interface. 
interface Map {
  interface Entry { ... }
}

> Without existing outer class object there is no chance of existing inner class object. 
> The relation between outer class and inner class is NOT 'IS-A' relation. It is a 'HAS-A' relationship (Composition/Aggregation).

TYPES OF INNER CLASSES (Based on position of declaration and behaviour they are devided):
1) Normal / Regular inner classes.
2) Method local inner classes.
3) Anonimous inner classes.
4) Static nested classes.

1) Learn about Java concept: Normal / Regular inner classes
https://github.com/skumarganga/Java-Concepts-Reference/blob/master/RegularInnerClassDemo.java

2) Learn about Java concept: Method local inner classes
https://github.com/skumarganga/Java-Concepts-Reference/blob/master/MethodLocalInnerClassDemo.java

3) Anonymous inner classes:
> Some times we can declare inner classes without name. Such type of inner classes are called anonymous inner classes.
> The main purpose of anonymous inner classes is just for instant use [one time usage].
> Based on declaration and behaviour anonymous inner classes are devided into three types. They are:

i) Anonymous inner class that extends a class.
Code references to learn:
https://github.com/skumarganga/Java-Concepts-Reference/blob/master/AnonymousInnerClassDemo1.java
https://github.com/skumarganga/Java-Concepts-Reference/blob/master/AnonymousInnerClassDemo2.java

ii) Anonymous inner class that implements an interface.
iii) Anonymous inner class that defined inside arguments.
Code reference to learn ii & iii:
https://github.com/skumarganga/Java-Concepts-Reference/blob/master/AnonymousInnerClassDemo3.java

Normal java class VS anonymous inner classes:
> A normal java class can extend only one class at a time. Anonymous inner class also can extend one class at a time.
> A normal java class can implement any number of interfaces simultainously but anonymous inner class can implement only one interface at a time.
> A normal java class can extend a class and can implement any number of interfaces simultainiously. 
Anonymous inner class can extend a class or can implement an interface but not both simultainiously.
> In normal java class we can write any number of constructors but in anonymous inner classes we can't write any constructor explicitely.
(Because the name of the class & the name of the constructor must be same but anonymous inner class is not having any name).
> NOTE: If a requirement is standard and required several times then we should go for normal top level class. If the requirement is
temperory and required only once (instant use) then we should go for anonymous inner class.

2) Learn about Java concept: Static nested classes
https://github.com/skumarganga/Java-Concepts-Reference/blob/master/StaticNestedClassDemo.java
